// <auto-generated />
using System;
using GeshkCore.Infrastructure.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GeshkCore.Infrastructure.Migrations
{
    [DbContext(typeof(GeshkDbContext))]
    partial class GeshkDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GeshkCore.Domain.Entities.Catalogo.ConfiguracionCatalogo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("ColorAcento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LogoClienteUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MensajeBienvenida")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PlantillaPublicacion")
                        .HasColumnType("text");

                    b.Property<string>("WhatsAppContacto")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ConfiguracionesCatalogo");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.Catalogo.ProductoCatalogo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<bool>("Destacado")
                        .HasColumnType("boolean");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nota")
                        .HasColumnType("text");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("numeric");

                    b.Property<Guid?>("ProductoId")
                        .HasColumnType("uuid");

                    b.Property<bool>("Visible")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("ProductosCatalogo");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.Catalogo.Promocion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Activa")
                        .HasColumnType("boolean");

                    b.Property<string>("DescripcionCorta")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaPublicacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ProductoCatalogoId")
                        .HasColumnType("uuid");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProductoCatalogoId");

                    b.ToTable("Promociones");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.Catalogo.Publicacion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Fondo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ProductoCatalogoId")
                        .HasColumnType("uuid");

                    b.Property<string>("TextoExtra")
                        .HasColumnType("text");

                    b.Property<string>("UrlImagenGenerada")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProductoCatalogoId");

                    b.ToTable("Publicaciones");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean");

                    b.Property<string>("ConfiguracionJson")
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaActivacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("ModoSandbox")
                        .HasColumnType("boolean");

                    b.Property<string>("NombreComercial")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Plan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Subdominio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.Empleados.Asistencia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("EmpleadoId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Observacion")
                        .HasColumnType("text");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EmpleadoId");

                    b.ToTable("Asistencias");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.Empleados.Disponibilidad", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("EmpleadoId")
                        .HasColumnType("uuid");

                    b.Property<string>("FechasBloqueadasJson")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VacacionesJson")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EmpleadoId");

                    b.ToTable("Disponibilidades");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.Empleados.Empleado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean");

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("text");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Correo")
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefono")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.Empleados.GrupoTrabajo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("GruposTrabajo");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.Empleados.HistorialEmpleado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Accion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("EmpleadoId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RegistradoPor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EmpleadoId");

                    b.ToTable("HistorialEmpleados");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.Empleados.HorarioSemanal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("DiaSemana")
                        .HasColumnType("integer");

                    b.Property<Guid>("EmpleadoId")
                        .HasColumnType("uuid");

                    b.Property<string>("Grupo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<TimeSpan>("HoraFin")
                        .HasColumnType("interval");

                    b.Property<TimeSpan>("HoraInicio")
                        .HasColumnType("interval");

                    b.Property<string>("Ubicacion")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EmpleadoId");

                    b.ToTable("HorariosSemanales");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.Encuestas.ConfiguracionEncuesta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("ActivarPostCita")
                        .HasColumnType("boolean");

                    b.Property<bool>("ActivarPostVenta")
                        .HasColumnType("boolean");

                    b.Property<bool>("ActivarQR")
                        .HasColumnType("boolean");

                    b.Property<Guid>("EncuestaId")
                        .HasColumnType("uuid");

                    b.Property<string>("Visibilidad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EncuestaId");

                    b.ToTable("ConfiguracionesEncuesta");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.Encuestas.Encuesta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Activa")
                        .HasColumnType("boolean");

                    b.Property<string>("BrandingJson")
                        .HasColumnType("text");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Encuestas");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.Encuestas.Pregunta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("EncuestaId")
                        .HasColumnType("uuid");

                    b.Property<bool>("Requerida")
                        .HasColumnType("boolean");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EncuestaId");

                    b.ToTable("Preguntas");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.Encuestas.Respuesta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CanalOrigen")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("EncuestaId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("PreguntaId")
                        .HasColumnType("uuid");

                    b.Property<string>("RespuestaTexto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EncuestaId");

                    b.HasIndex("PreguntaId");

                    b.ToTable("Respuestas");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.GeshkAdmin.ConsumoRecurso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double>("AnchoBandaMb")
                        .HasColumnType("double precision");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("MbUsados")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("ConsumoRecursos");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.GeshkAdmin.HistorialCuenta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nota")
                        .HasColumnType("text");

                    b.Property<string>("TipoEvento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("HistorialCuentas");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.GeshkAdmin.LogModulo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Modulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TipoEvento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("LogsModulo");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.GeshkAdmin.NotaInterna", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Contenido")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UsuarioGeshk")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("NotasInternas");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.GeshkAdmin.PlanModule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ModuleKey")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Permitido")
                        .HasColumnType("boolean");

                    b.Property<string>("Plan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PlanModules");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.Inventario.AlertaStock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("FechaUltimaAlerta")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Notificado")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ProductoId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ProductoId");

                    b.ToTable("AlertasStock");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.Inventario.EntradaInventario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Cantidad")
                        .HasColumnType("integer");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ProductoId")
                        .HasColumnType("uuid");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProductoId");

                    b.ToTable("EntradasInventario");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.Inventario.Producto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Costo")
                        .HasColumnType("numeric");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("PrecioVenta")
                        .HasColumnType("numeric");

                    b.Property<Guid?>("ProveedorId")
                        .HasColumnType("uuid");

                    b.Property<int>("Stock")
                        .HasColumnType("integer");

                    b.Property<int>("StockMinimo")
                        .HasColumnType("integer");

                    b.Property<bool>("Visible")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("ProveedorId");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.Inventario.Proveedor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Correo")
                        .HasColumnType("text");

                    b.Property<string>("Direccion")
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefono")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.Inventario.SalidaInventario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Cantidad")
                        .HasColumnType("integer");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ModuloOrigen")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ProductoId")
                        .HasColumnType("uuid");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProductoId");

                    b.ToTable("SalidasInventario");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.LogAcceso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Accion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("IpOrigen")
                        .HasColumnType("text");

                    b.Property<string>("Modulo")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("LogsAcceso");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.Module", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("ModuleKey")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.POS.CierreCaja", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ArchivoExcelUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Total")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("CierresCaja");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.POS.ComprobantePago", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("OrdenId")
                        .HasColumnType("uuid");

                    b.Property<string>("UrlArchivo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("OrdenId");

                    b.ToTable("ComprobantesPago");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.POS.ItemOrden", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Cantidad")
                        .HasColumnType("integer");

                    b.Property<Guid>("OrdenId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("numeric");

                    b.Property<string>("ProductoNombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("OrdenId");

                    b.ToTable("ItemsOrden");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.POS.Mesa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Numero")
                        .HasColumnType("integer");

                    b.Property<string>("Zona")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Mesas");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.POS.MetodoPago", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("OrdenId")
                        .HasColumnType("uuid");

                    b.Property<string>("Referencia")
                        .HasColumnType("text");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("OrdenId");

                    b.ToTable("MetodosPago");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.POS.Orden", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Total")
                        .HasColumnType("numeric");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Ordenes");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.POS.ProductoPOS", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Precio")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("ProductosPOS");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.Turnos.CampoPersonalizado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Etiqueta")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("FormularioId")
                        .HasColumnType("uuid");

                    b.Property<bool>("Requerido")
                        .HasColumnType("boolean");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FormularioId");

                    b.ToTable("CamposPersonalizados");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.Turnos.Cita", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("ClienteNombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Correo")
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("FormularioId")
                        .HasColumnType("uuid");

                    b.Property<TimeSpan>("Hora")
                        .HasColumnType("interval");

                    b.Property<string>("ObservacionesInternas")
                        .HasColumnType("text");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FormularioId");

                    b.ToTable("Citas");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.Turnos.ConfiguracionAgenda", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("DiasActivosJson")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ExcepcionesJson")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("FormularioId")
                        .HasColumnType("uuid");

                    b.Property<TimeSpan>("HorarioFin")
                        .HasColumnType("interval");

                    b.Property<TimeSpan>("HorarioInicio")
                        .HasColumnType("interval");

                    b.Property<int>("IntervaloMinutos")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FormularioId")
                        .IsUnique();

                    b.ToTable("ConfiguracionesAgenda");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.Turnos.Formulario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PlanRequerido")
                        .HasColumnType("text");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Formularios");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.Turnos.HistorialCita", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Accion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("CitaId")
                        .HasColumnType("uuid");

                    b.Property<string>("Comentario")
                        .HasColumnType("text");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CitaId");

                    b.ToTable("HistorialCitas");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.Catalogo.Promocion", b =>
                {
                    b.HasOne("GeshkCore.Domain.Entities.Catalogo.ProductoCatalogo", "ProductoCatalogo")
                        .WithMany("Promociones")
                        .HasForeignKey("ProductoCatalogoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductoCatalogo");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.Catalogo.Publicacion", b =>
                {
                    b.HasOne("GeshkCore.Domain.Entities.Catalogo.ProductoCatalogo", "ProductoCatalogo")
                        .WithMany("Publicaciones")
                        .HasForeignKey("ProductoCatalogoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductoCatalogo");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.Empleados.Asistencia", b =>
                {
                    b.HasOne("GeshkCore.Domain.Entities.Empleados.Empleado", "Empleado")
                        .WithMany("Asistencias")
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.Empleados.Disponibilidad", b =>
                {
                    b.HasOne("GeshkCore.Domain.Entities.Empleados.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.Empleados.HistorialEmpleado", b =>
                {
                    b.HasOne("GeshkCore.Domain.Entities.Empleados.Empleado", "Empleado")
                        .WithMany("Historial")
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.Empleados.HorarioSemanal", b =>
                {
                    b.HasOne("GeshkCore.Domain.Entities.Empleados.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.Encuestas.ConfiguracionEncuesta", b =>
                {
                    b.HasOne("GeshkCore.Domain.Entities.Encuestas.Encuesta", "Encuesta")
                        .WithMany()
                        .HasForeignKey("EncuestaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Encuesta");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.Encuestas.Pregunta", b =>
                {
                    b.HasOne("GeshkCore.Domain.Entities.Encuestas.Encuesta", "Encuesta")
                        .WithMany("Preguntas")
                        .HasForeignKey("EncuestaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Encuesta");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.Encuestas.Respuesta", b =>
                {
                    b.HasOne("GeshkCore.Domain.Entities.Encuestas.Encuesta", "Encuesta")
                        .WithMany("Respuestas")
                        .HasForeignKey("EncuestaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GeshkCore.Domain.Entities.Encuestas.Pregunta", "Pregunta")
                        .WithMany()
                        .HasForeignKey("PreguntaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Encuesta");

                    b.Navigation("Pregunta");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.Inventario.AlertaStock", b =>
                {
                    b.HasOne("GeshkCore.Domain.Entities.Inventario.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.Inventario.EntradaInventario", b =>
                {
                    b.HasOne("GeshkCore.Domain.Entities.Inventario.Producto", "Producto")
                        .WithMany("Entradas")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.Inventario.Producto", b =>
                {
                    b.HasOne("GeshkCore.Domain.Entities.Inventario.Proveedor", "Proveedor")
                        .WithMany("Productos")
                        .HasForeignKey("ProveedorId");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.Inventario.SalidaInventario", b =>
                {
                    b.HasOne("GeshkCore.Domain.Entities.Inventario.Producto", "Producto")
                        .WithMany("Salidas")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.LogAcceso", b =>
                {
                    b.HasOne("GeshkCore.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.Module", b =>
                {
                    b.HasOne("GeshkCore.Domain.Entities.Client", "Client")
                        .WithMany("Modules")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.POS.ComprobantePago", b =>
                {
                    b.HasOne("GeshkCore.Domain.Entities.POS.Orden", "Orden")
                        .WithMany("Comprobantes")
                        .HasForeignKey("OrdenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orden");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.POS.ItemOrden", b =>
                {
                    b.HasOne("GeshkCore.Domain.Entities.POS.Orden", "Orden")
                        .WithMany("Items")
                        .HasForeignKey("OrdenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orden");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.POS.MetodoPago", b =>
                {
                    b.HasOne("GeshkCore.Domain.Entities.POS.Orden", "Orden")
                        .WithMany("MetodosPago")
                        .HasForeignKey("OrdenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orden");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.Turnos.CampoPersonalizado", b =>
                {
                    b.HasOne("GeshkCore.Domain.Entities.Turnos.Formulario", "Formulario")
                        .WithMany("Campos")
                        .HasForeignKey("FormularioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Formulario");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.Turnos.Cita", b =>
                {
                    b.HasOne("GeshkCore.Domain.Entities.Turnos.Formulario", "Formulario")
                        .WithMany("Citas")
                        .HasForeignKey("FormularioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Formulario");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.Turnos.ConfiguracionAgenda", b =>
                {
                    b.HasOne("GeshkCore.Domain.Entities.Turnos.Formulario", "Formulario")
                        .WithOne("Configuracion")
                        .HasForeignKey("GeshkCore.Domain.Entities.Turnos.ConfiguracionAgenda", "FormularioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Formulario");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.Turnos.HistorialCita", b =>
                {
                    b.HasOne("GeshkCore.Domain.Entities.Turnos.Cita", "Cita")
                        .WithMany("Historial")
                        .HasForeignKey("CitaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cita");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.User", b =>
                {
                    b.HasOne("GeshkCore.Domain.Entities.Client", "Client")
                        .WithMany("Users")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.Catalogo.ProductoCatalogo", b =>
                {
                    b.Navigation("Promociones");

                    b.Navigation("Publicaciones");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.Client", b =>
                {
                    b.Navigation("Modules");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.Empleados.Empleado", b =>
                {
                    b.Navigation("Asistencias");

                    b.Navigation("Historial");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.Encuestas.Encuesta", b =>
                {
                    b.Navigation("Preguntas");

                    b.Navigation("Respuestas");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.Inventario.Producto", b =>
                {
                    b.Navigation("Entradas");

                    b.Navigation("Salidas");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.Inventario.Proveedor", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.POS.Orden", b =>
                {
                    b.Navigation("Comprobantes");

                    b.Navigation("Items");

                    b.Navigation("MetodosPago");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.Turnos.Cita", b =>
                {
                    b.Navigation("Historial");
                });

            modelBuilder.Entity("GeshkCore.Domain.Entities.Turnos.Formulario", b =>
                {
                    b.Navigation("Campos");

                    b.Navigation("Citas");

                    b.Navigation("Configuracion")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
